Функция ВыгрузитьТаблицуЗначенийВДеревоЗначений(Таблица, КлючСтроки = "КлючСтроки", КлючСвязи = "КлючСвязи") Экспорт

	Дерево = Новый ДеревоЗначений;
	Для Каждого Колонка Из Таблица.Колонки Цикл
		Дерево.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
	КонецЦикла;

	Для Каждого СтрокаТаблицы Из Таблица Цикл
		СтрокаГруппировки = Дерево.Строки.Найти(СтрокаТаблицы[КлючСвязи], КлючСтроки, Истина);
		Если СтрокаГруппировки = Неопределено Тогда
			ЗаполнитьЗначенияСвойств(Дерево.Строки.Добавить(), СтрокаТаблицы);
		Иначе
			ЗаполнитьЗначенияСвойств(СтрокаГруппировки.Строки.Добавить(), СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;

	Возврат Дерево.Скопировать();

КонецФункции

&НаСервере
Функция ВыгрузитьДеревоЗначенийВТаблицуЗначений(Таблица = Неопределено)
	ДеревоЗначений = РеквизитФормыВЗначение("ДеревоДанных");
	Если Таблица = Неопределено Тогда
		Таблица = Новый ТаблицаЗначений;
		Для Каждого Колонка Из ДеревоЗначений.Колонки Цикл
			Таблица.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
		КонецЦикла;
	КонецЕсли;

	Для Каждого СтрокаДерева Из ДеревоЗначений.Строки Цикл
		ЗаполнитьЗначенияСвойств(Таблица.Добавить(), СтрокаДерева);
		ВыгрузитьДеревоЗначенийВТаблицуЗначений(Таблица);
	КонецЦикла;
	Возврат Таблица;

КонецФункции
&НаСервере
Функция ПолучитьНовыйКлючСвязиДерева()

	ДеревоЗнач = РеквизитФормыВЗначение("ДеревоДанных");
	СписокКлючей = Новый СписокЗначений;
	ГСЧ = Новый ГенераторСлучайныхЧисел(ТекущаяУниверсальнаяДатаВМиллисекундах());
	К=ГСЧ.СлучайноеЧисло(0, 10000);

	Для Каждого СтрокаДерева Из ДеревоЗнач.Строки Цикл
		СписокКлючей.Добавить(СтрокаДерева.КлючСтроки);
		СписокКлючей.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
		МаксКлюч = СписокКлючей[0].Значение + К;
	КонецЦикла;

	Возврат МаксКлюч;

КонецФункции
&НаСервере
Функция ПолучитьНовыйКлючСтрокиДерева()
	ДеревоЗнач = РеквизитФормыВЗначение("ДеревоДанных");
	Если Не ДеревоЗнач.Строки.Количество() = 0 Тогда
		СписокКлючей = Новый СписокЗначений;
		ГСЧ = Новый ГенераторСлучайныхЧисел(ТекущаяУниверсальнаяДатаВМиллисекундах());
		К=ГСЧ.СлучайноеЧисло(0, 10000);
		Для Каждого СтрокаДерева Из ДеревоЗнач.Строки Цикл
			СписокКлючей.Добавить(СтрокаДерева.КлючСвязи);

			СписокКлючей.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
			МаксКлюч = СписокКлючей[0].Значение + К;
		КонецЦикла;
	Иначе
		МаксКлюч=1;
	КонецЕсли;

	Возврат МаксКлюч;

КонецФункции

&НаСервере
Процедура ПриОткрытииНаСервере()

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	АвтонумерацияДереваРасценок = Истина;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		Объект.СтатусДокумента=Перечисления.ПланП_СтатусРасчета.ВОбработке;
	КонецЕсли;

	Дерево = ВыгрузитьТаблицуЗначенийВДеревоЗначений(Объект.СоставИзделия.Выгрузить());

	ЗначениеВРеквизитФормы(Дерево, "ДеревоДанных");
	//	Для Каждого НумераторДереваРасценок Из Перечисления.мсНумераторыЭлементовДереваЗначений Цикл
	//	Элементы.НумераторДереваРасценок.СписокВыбора.Добавить(НумераторДереваРасценок);
	//КонецЦикла;

КонецПроцедуры
&НаКлиенте
Процедура ДеревоДанныхПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДанныхПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ОбойтиДеревоНаСервере();
	//ДобавитьОперации();

	ПолучитьИтог();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПервыйУровень(Команда)
	ДобавитьСтрокуПервыйУровень();
КонецПроцедуры
&НаСервере
Процедура ДобавитьСтрокуПервыйУровень()
	ДеревоЗначений = РеквизитФормыВЗначение("ДеревоДанных");
	НовСтрока = ДеревоЗначений.Строки.Добавить();
	НовСтрока.КлючСвязи=0;
	НовСтрока.КлючСтроки=ПолучитьНовыйКлючСтрокиДерева();
	НовСтрока.КоэффОтходности=1.2;
	GUID=Новый УникальныйИдентификатор;
	НовСтрока.GUID=GUID;
	ЗначениеВРеквизитФормы(ДеревоЗначений, "ДеревоДанных");
КонецПроцедуры
&НаКлиенте
Процедура ДобавитьСледующийУровень(Команда)
	ИдентификаторСтроки = Элементы.ДеревоДанных.ТекущаяСтрока;
	ТекущаяСтрока       =ДеревоДанных.НайтиПоИдентификатору(ИдентификаторСтроки);

	ТекДанные = Элементы.ДеревоДанных.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ТекДанные.ПолучитьРодителя() <> Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	НоваяСтрокаДерева   = ТекущаяСтрока.ПолучитьЭлементы().Добавить();
	НоваяСтрокаДерева.КлючСтроки = ПолучитьНовыйКлючСтрокиДерева();
	НоваяСтрокаДерева.КлючСвязи  = ТекущаяСтрока.КлючСтроки;
КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ИзменитьСоставИзделия();
КонецПроцедуры
&НаСервере
Процедура ИзменитьСоставИзделия()

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	ОбойтиДеревоНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбойтиДеревоНаСервере()
	Объект.СоставИзделия.Очистить();

	ДеревоЗнач = РеквизитФормыВЗначение("ДеревоДанных");

	ОбходДереваДетально(ДеревоЗнач);

КонецПроцедуры

&НаСервере
Процедура ОбходДереваДетально(ПереданноеДер)
	Для Каждого СтрПолученногоДерева Из ПереданноеДер.Строки Цикл
		НовСтрока=Объект.СоставИзделия.Добавить();
		НовСтрока.КлючСтроки = СтрПолученногоДерева.КлючСтроки;
		НовСтрока.КлючСвязи = СтрПолученногоДерева.КлючСвязи;
		НовСтрока.Наименование = СтрПолученногоДерева.Наименование;
		НовСтрока.КоличествоНаКомплект = СтрПолученногоДерева.КоличествоНаКомплект;
		НовСтрока.ЕдИзм = СтрПолученногоДерева.ЕдИзм;
		НовСтрока.Материал = СтрПолученногоДерева.Материал;
		НовСтрока.Длина = СтрПолученногоДерева.Длина;
		НовСтрока.Ширина = СтрПолученногоДерева.Ширина;
		НовСтрока.ВесДетали = СтрПолученногоДерева.ВесДетали;
		НовСтрока.КоэффОтходности = СтрПолученногоДерева.КоэффОтходности;
		НовСтрока.СтоимостьМатериала = СтрПолученногоДерева.СтоимостьМатериала;
		НовСтрока.ЦенаПродажи = СтрПолученногоДерева.ЦенаПродажи;
		НовСтрока.ЦенаЗакупки = СтрПолученногоДерева.ЦенаЗакупки;
		НовСтрока.ПримечаниеИсточникИнформации = СтрПолученногоДерева.ПримечаниеИсточникИнформации;
		НовСтрока.GUID = СтрПолученногоДерева.GUID;

		Если СтрПолученногоДерева.Строки.Количество() > 0 Тогда
			ОбходДереваДетально(СтрПолученногоДерева);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДанныхПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
КонецПроцедуры
&НаКлиенте
Процедура ДеревоДанныхКнопкаНажатие(Элемент, СтандартнаяОбработка)
	Сообщить("лала");
КонецПроцедуры
#Область АктивизацияСтрок
&НаКлиенте
Процедура ДеревоДанныхПриАктивизацииСтроки(Элемент)
	Попытка
		ТекущиеДанные = Элементы.ДеревоДанных.ТекущиеДанные;
		Элементы.ОперацииВЭтапах.ОтборСтрок=Новый ФиксированнаяСтруктура("КлючСтроки", ТекущиеДанные.GUID);
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОперацииВЭтапахПриАктивизацииСтроки(Элемент)
	Попытка
		ТекущиеДанные = Элементы.ОперацииВЭтапах.ТекущиеДанные;
		Элементы.НоменклатураВОперациях.ОтборСтрок=Новый ФиксированнаяСтруктура("КлючСтроки", ТекущиеДанные.GUID);
		Элементы.ДополнительныеОперации.ОтборСтрок=Новый ФиксированнаяСтруктура("КлючСтроки", ТекущиеДанные.GUID);
		ИзменениеНаименованийКолонокДО(ПолучитьДополнительныеОперации(ТекущиеДанные.Операция));
	Исключение
	КонецПопытки;
КонецПроцедуры
#КонецОбласти
#Область ДобавлениеСтрок

&НаКлиенте
Процедура ДобавитьОперацию(Команда)
	ТекущиеДанные = Элементы.ДеревоДанных.ТекущиеДанные;
	НовСтрока=Объект.ОперацииВЭтапах.Добавить();
	НовСтрока.КлючСтроки=ТекущиеДанные.GUID;
	НовGUID=Новый УникальныйИдентификатор;
	НовСтрока.GUID=НовGUID;

КонецПроцедуры
&НаКлиенте
Процедура ДобавитьМатериалВОперацию(Команда)
	ТекущиеДанные = Элементы.ОперацииВЭтапах.ТекущиеДанные;
	НовСтрока=Объект.НоменклатураВОперациях.Добавить();
	НовСтрока.КлючСтроки=ТекущиеДанные.GUID;
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура СформироватьТабДок()

	ТабДок= ЭтотОбъект.СтруктураИзделия;
	ТабДок.Очистить();
	МакетТД = Документы.План_РасчетИзделия.ПолучитьМакет("СтруктураИзделия");
	ШапкаСоставаИзделия = МакетТД.ПолучитьОбласть("ШапкаСоставаИзделия");
	Шапка=МакетТД.ПолучитьОбласть("Шапка");
	СтрокаСоставИзделия = МакетТД.ПолучитьОбласть("СоставИзделия");
	СтрокаЭтап=МакетТД.ПолучитьОбласть("Этап");
	СтрокаОперация=МакетТД.ПолучитьОбласть("Операция");
	СтрокаНоменклатура=МакетТД.ПолучитьОбласть("НоменклатураВОперации");

	Шапка.Параметры.Клиент=Объект.Клиент;
	Шапка.Параметры.КонечноеИзделие=Объект.КонечноеИзделие;
	Шапка.Параметры.Количество=Объект.Количество;
	Шапка.Параметры.СуммаДокумента=Объект.СуммаДокумента;
	Шапка.Параметры.СебестоимостьДокумента=Объект.СебестоимостьДокумента;
	Шапка.Параметры.Доход=Объект.СуммаДокумента - Объект.СебестоимостьДокумента;
	ТабДок.Вывести(Шапка);
	ТабДок.Вывести(ШапкаСоставаИзделия);
	Для Каждого ТекСтрокаСИ Из Объект.СоставИзделия Цикл
		СтрокаСоставИзделия.Параметры.Наименование=ТекСтрокаСИ.Наименование;
		СтрокаСоставИзделия.Параметры.Примечание=ТекСтрокаСИ.ПримечаниеИсточникИнформации;
		СтрокаСоставИзделия.Параметры.Количество=ТекСтрокаСИ.КоличествоНаКомплект;
		СтрокаСоставИзделия.Параметры.Марка=ТекСтрокаСИ.Материал;
		СтрокаСоставИзделия.Параметры.Длина=ТекСтрокаСИ.Длина;
		СтрокаСоставИзделия.Параметры.Ширина=ТекСтрокаСИ.Ширина;
		СтрокаСоставИзделия.Параметры.Вес=ТекСтрокаСИ.ВесДетали;
		СтрокаСоставИзделия.Параметры.Котхода=ТекСтрокаСИ.КоэффОтходности;
		СтрокаСоставИзделия.Параметры.Себестоимость=ТекСтрокаСИ.ЦенаЗакупки;
		СтрокаСоставИзделия.Параметры.Цена=ТекСтрокаСИ.ЦенаПродажи;
		СтрокаСоставИзделия.Параметры.Стоимость=ТекСтрокаСИ.СтоимостьМатериала;
		ТабДок.Вывести(СтрокаСоставИзделия);

		Для Каждого ТекСтрокаОперация Из Объект.ОперацииВЭтапах Цикл
			Если ТекСтрокаОперация.КлючСтроки = ТекСтрокаСИ.GUID Тогда
				СтрокаОперация.Параметры.Операция=ТекСтрокаОперация.Операция;
				СтрокаОперация.Параметры.Количество=ТекСтрокаОперация.Количество;
				СтрокаОперация.Параметры.Цена=ТекСтрокаОперация.ЦенаПродажи;
				СтрокаОперация.Параметры.Стоимость=ТекСтрокаОперация.Сумма;

				ТабДок.Вывести(СтрокаОперация);
			КонецЕсли;
			Для Каждого ТекСтрокаНоменклатура Из Объект.НоменклатураВОперациях Цикл
				Если ТекСтрокаНоменклатура.КлючСтроки = ТекСтрокаОперация.GUID Тогда

					СтрокаНоменклатура.Параметры.Номенклатура=ТекСтрокаНоменклатура.Номенклатура;
					СтрокаНоменклатура.Параметры.Количество=ТекСтрокаНоменклатура.Количество;
					СтрокаНоменклатура.Параметры.Себестоимость=ТекСтрокаНоменклатура.ЦенаЗакупки;
					СтрокаНоменклатура.Параметры.Цена=ТекСтрокаНоменклатура.ЦенаПродажи;
					СтрокаНоменклатура.Параметры.Стоимость=ТекСтрокаНоменклатура.Сумма;

					ТабДок.Вывести(СтрокаНоменклатура);
				КонецЕсли;
					
				//	КонецЦикла;
			КонецЦикла;
		КонецЦикла;

	КонецЦикла;
КонецПроцедуры
&НаКлиенте
Процедура Обновить(Команда)
	СформироватьТабДок();

КонецПроцедуры

&НаСервере
Процедура ОчиститьСоставИзделияНаСервере()
	тДерево = РеквизитФормыВЗначение("ДеревоДанных");

	тДерево.Строки.Очистить();

	ЗначениеВРеквизитФормы(тДерево, "ДеревоДанных");
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСоставИзделия(Команда)
	Объект.СоставИзделия.Очистить();
	Объект.Этапы.Очистить();
	Объект.ОперацииВЭтапах.Очистить();
	Объект.НоменклатураВОперациях.Очистить();
	ОчиститьСоставИзделияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИтог()
	ИтогСИ=Объект.СоставИзделия.Итог("СтоимостьМатериала");
	ИтогОперации=Объект.ОперацииВЭтапах.Итог("Сумма");
	ИтогНоменклатураВОперациях=Объект.НоменклатураВОперациях.Итог("Сумма");
	Объект.СуммаДокумента=ИтогСИ + ИтогОперации + ИтогНоменклатураВОперациях;
	СебестСИ=0;
	Для Каждого ТекСтрока Из Объект.СоставИзделия Цикл
		СебестСИ=СебестСИ + ТекСтрока.ВесДетали * ТекСтрока.КоличествоНаКомплект * ТекСтрока.ЦенаЗакупки;
	КонецЦикла;
	СебестНом=0;
	Для Каждого ТекСтрока Из Объект.НоменклатураВОперациях Цикл
		СебестНом=СебестНом + ТекСтрока.Количество * ТекСтрока.ЦенаЗакупки;

	КонецЦикла;
	Объект.СебестоимостьДокумента=ИтогОперации + СебестСИ + СебестНом;
КонецПроцедуры

&НаКлиенте
Процедура ОперацииВЭтапахПриИзменении(Элемент)
	ПолучитьИтог();
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураВОперацияхПриИзменении(Элемент)
	ПолучитьИтог();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДанныхКоличествоНаКомплектПриИзменении(Элемент)
	ТекДанные=Элементы.ДеревоДанных.ТекущиеДанные;
	ТекДанные.СтоимостьМатериала=ТекДанные.КоличествоНаКомплект * ТекДанные.ВесДетали * ТекДанные.ЦенаПродажи * 1.2;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДанныхЦенаПродажиПриИзменении(Элемент)
	ТекДанные=Элементы.ДеревоДанных.ТекущиеДанные;
	ТекДанные.СтоимостьМатериала=ТекДанные.КоличествоНаКомплект * ТекДанные.ЦенаПродажи * 1.2;

КонецПроцедуры
&НаКлиенте
Процедура ОперацииВЭтапахЦенаПриИзменении(Элемент)
	ТекДанные=Элементы.ОперацииВЭтапах.ТекущиеДанные;
	ТекДанные.Сумма=ТекДанные.Количество * ТекДанные.ЦенаПродажи;
КонецПроцедуры
&НаКлиенте
Процедура НоменклатураВОперацияхКоличествоПриИзменении(Элемент)
	ТекДанные=Элементы.НоменклатураВОперациях.ТекущиеДанные;
	ТекДанные.Сумма=ТекДанные.Количество * ТекДанные.ЦенаПродажи;
КонецПроцедуры
&НаКлиенте
Процедура НоменклатураВОперацияхЦенаПриИзменении(Элемент)
	ТекДанные=Элементы.НоменклатураВОперациях.ТекущиеДанные;
	ТекДанные.Сумма=ТекДанные.Количество * ТекДанные.ЦенаПродажи;
КонецПроцедуры
&НаКлиенте
Процедура ПечатьСтруктуры(Команда)
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("СтруктураИзделия");
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ЭтотОбъект.СтруктураИзделия;
	; 
	КоллекцияПечатныхФорм[0].Экземпляров=1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "Структура Изделия";
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Неопределено, ЭтаФорма);
КонецПроцедуры
#Область КоммерческоеПредложение

&НаКлиенте
Процедура ПечатьКоммерческогоПредложения(Команда)

	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("КоммерческоеПредложение");
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ПечатьКоммерческогоПредложенияНаСервере();
	КоллекцияПечатныхФорм[0].Экземпляров=1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "Коммерческое предложение";
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Неопределено, ЭтаФорма);

КонецПроцедуры

&НаСервере
Функция ПечатьКоммерческогоПредложенияНаСервере()

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ДанныеПечати = Новый Структура;
	Макет = Документы.План_РасчетИзделия.ПолучитьМакет("КоммерческоеПредложение");
		
	// \\ ЗаголовокЛоготип
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокЛоготип");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// \\ Покупатель
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.ПредставлениеПокупателя = Объект.Клиент.НаименованиеПолное;
	ОбластьМакета.Параметры.КонтактПокупателя       = Объект.Клиент.КонтактноеЛицо;
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// \\ ЗаголовокПредставлениеДокумента
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокПредставлениеДокумента");
	ТекстЗаголовка = СтрШаблон(
							НСтр("ru='Коммерческое предложение № %1 от %2'"), Объект.Номер,
		ПечатьДокументовУНФ.ПредставлениеДатыВДокументах(Объект.Дата));
	ДанныеПечати.Очистить();
	ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	//+\\Шапка и Таблица
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	ДанныеПечати.Очистить();
	ДанныеПечати.Вставить("НомерСтроки", 1);
	ДанныеПечати.Вставить("Номенклатура", Объект.КонечноеИзделие);
	ДанныеПечати.Вставить("Количество", Объект.Количество);
	ДанныеПечати.Вставить("Цена", Объект.СуммаДокумента / Объект.Количество);
	ДанныеПечати.Вставить("Сумма", Объект.СуммаДокумента);
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	//ОбластьМакета.Параметры.Установить("Всего", Объект.СуммаДокумента);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ДополнительныеУсловия");
	ДанныеПечати.Очистить();
	ДанныеПечати.Вставить("ДнейРабот", Объект.СрокИзготовления);
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	//+\\ ПОДВАЛ

	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОтветственныйEmail = УправлениеНебольшойФирмойСервер.ПолучитьКонтактнуюИнформацию(
			Объект.Менеджер.Физлицо, Справочники.ВидыКонтактнойИнформации.EmailФизическиеЛица);
	ОтветственныйТелефон = УправлениеНебольшойФирмойСервер.ПолучитьКонтактнуюИнформацию(
			Объект.Менеджер.Физлицо, Справочники.ВидыКонтактнойИнформации.ТелефонФизЛица);
	ДанныеПечати.Очистить();
	ДанныеПечати.Вставить("Ответственный", Объект.Менеджер);
	ДанныеПечати.Вставить("КонтактнаяИнформацияEmail", НСтр("ru='email: '") + ОтветственныйEmail);
	ДанныеПечати.Вставить("КонтактнаяИнформацияТелефон", НСтр("ru='телефон: '") + ОтветственныйТелефон);
	ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
	ОбластьПодвал.Параметры.Коммент = Объект.ПримечаниеКП;
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	//-\\
	
	//+\\ НИЖНИЙ КОЛОНТИТУЛ
	ТабличныйДокумент.НижнийКолонтитул.НачальнаяСтраница = 1;
	ТабличныйДокумент.НижнийКолонтитул.Шрифт             = Новый Шрифт("Arial", 8, Ложь);
	ТабличныйДокумент.НижнийКолонтитул.ТекстВЦентре      = "Лист [&НомерСтраницы]";
	ТабличныйДокумент.НижнийКолонтитул.ТекстВЦентре = "______________________________________________________________________________________________________________________"
		+ Символы.ПС + "      г.Санкт-Петербург, 194358 пр.Энгельса, дом 163, литер А, офис 1, тел.603-23-59,917-30-77, ИНН 7802557504, КПП 780201001, "
		+ Символы.ПС + "ОКАТО 40265562000, ОКПО 33168223, ОКТМО 40315000, ОГРН 1157847443159, р/с 40702810390700001006 в ПАО ""Банк ""Санкт-"
		+ Символы.ПС + "                          Петербург"", кор/счет 30101810900000000790, БИК 044030790";
	ТабличныйДокумент.НижнийКолонтитул.Выводить = Истина;

	ТабличныйДокумент.РазмерКолонтитулаСнизу     = 20;
	ТабличныйДокумент.ПолеСнизу                  = 20;
	ТабличныйДокумент.ПолеСверху                 = 0;
	ТабличныйДокумент.ВерхнийКолонтитул.Выводить = Истина;
	ТабличныйДокумент.РазмерКолонтитулаСверху    = 0;

	Возврат ТабличныйДокумент;
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧастиКоммерческоеПредложение(СтрокаТабличнойЧасти, ДанныеПечати,
	ПараметрыНоменклатуры, СтруктураИтогов)

	ДанныеПечати.Очистить();

	Если СтрокаТабличнойЧасти.ЭтоНабор Тогда
		НомерСтроки = 0;
	Иначе
		СтруктураИтогов.НомерСтроки = СтруктураИтогов.НомерСтроки + 1;
		НомерСтроки =                 СтруктураИтогов.НомерСтроки;
	КонецЕсли;
	ДанныеПечати.Вставить("НомерСтроки", НомерСтроки);

	ПараметрыНоменклатуры.Очистить();
	ПараметрыНоменклатуры.Вставить("Содержание", СтрокаТабличнойЧасти.Содержание);
	ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", СтрокаТабличнойЧасти.ПредставлениеНоменклатуры);
	ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", СтрокаТабличнойЧасти.Характеристика);
	ПараметрыНоменклатуры.Вставить("ПредставлениеАртикула", СтрокаТабличнойЧасти.Артикул);
	// Наборы
	ПараметрыНоменклатуры.Вставить("НеобходимоВыделитьКакСоставНабора",
		СтрокаТабличнойЧасти.НеобходимоВыделитьКакСоставНабора);

	ДанныеПечати.Вставить("Номенклатура", ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры));

	Если СтруктураИтогов.ЕстьСкидки Тогда

		Если СтрокаТабличнойЧасти.ПроцентСкидкиНаценки = 100 Тогда
			Скидка         = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
			СуммаБезСкидки = Скидка;
		ИначеЕсли СтрокаТабличнойЧасти.ПроцентСкидкиНаценки = 0 И СтрокаТабличнойЧасти.СуммаАвтоматическойСкидки = 0 Тогда
			Скидка         = 0;
			СуммаБезСкидки = СтрокаТабличнойЧасти.Сумма;
		Иначе
			Скидка         = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена - СтрокаТабличнойЧасти.Сумма; // АвтоматическиеСкидки;
			СуммаБезСкидки = СтрокаТабличнойЧасти.Сумма + Скидка;
		КонецЕсли;
		ДанныеПечати.Вставить("Скидка", Скидка);
		ДанныеПечати.Вставить("СуммаБезСкидки", СуммаБезСкидки);

	КонецЕсли;

	Если Не СтрокаТабличнойЧасти.ЭтоНабор Тогда

		СтруктураИтогов.Сумма      = СтруктураИтогов.Сумма + СтрокаТабличнойЧасти.Сумма;
		СтруктураИтогов.СуммаНДС   = СтруктураИтогов.СуммаНДС + СтрокаТабличнойЧасти.СуммаНДС;
		СтруктураИтогов.Всего      = СтруктураИтогов.Всего + СтрокаТабличнойЧасти.Всего;
		СтруктураИтогов.Количество = СтруктураИтогов.Количество + 1;
		СтруктураИтогов.Вес        = СтруктураИтогов.Вес + СтрокаТабличнойЧасти.Вес;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ОсновнойЗапросПФ()

	Текст =
	"ВЫБРАТЬ
	|	План_РасчетИзделия.КонечноеИзделие КАК Номенклатура,
	|	План_РасчетИзделия.ЕдИзм КАК ЕдИзм,
	|	План_РасчетИзделия.СуммаДокумента КАК Сумма,
	|	План_РасчетИзделия.Количество КАК Количество,
	|	План_РасчетИзделия.Клиент КАК Клиент
	|ИЗ
	|	Документ.План_РасчетИзделия КАК План_РасчетИзделия
	|ГДЕ
	|	План_РасчетИзделия.Ссылка В(&МассивОбъектов)";

	Возврат Текст;
КонецФункции

&НаСервере
Функция ПолучитьДолжностьСотрудника(Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	СотрудникиСрезПоследних.Должность КАК Должность
	|ИЗ
	|	РегистрСведений.Сотрудники.СрезПоследних КАК СотрудникиСрезПоследних
	|ГДЕ
	|	СотрудникиСрезПоследних.Сотрудник = &Ссылка";

	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	ДолжностьСотрудника = "";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДолжностьСотрудника = ВыборкаДетальныеЗаписи.Должность;
	КонецЦикла;

	Возврат ДолжностьСотрудника;
КонецФункции

&НаСервере
Функция ПолучитьКоличествоРабочихДней(ДатаДокумента, ДатаОтгрузки)

	КоличествоРабочихДней = 0;

	ОсновнойПроизводственныйКалендарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();

	Если ОсновнойПроизводственныйКалендарь <> Неопределено Тогда
		КоличествоРабочихДней = КалендарныеГрафики.РазностьДатПоКалендарю(
			ОсновнойПроизводственныйКалендарь, НачалоДня(ДатаДокумента), НачалоДня(ДатаОтгрузки), Ложь);
	КонецЕсли;

	Возврат КоличествоРабочихДней;
КонецФункции

&НаСервере
Функция ПолучитьПримечание(Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Наименование", "Примечание (Заказы покупателей)");

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказПокупателяДополнительныеРеквизиты.Значение КАК Значение
	|ИЗ
	|	Документ.ЗаказПокупателя.ДополнительныеРеквизиты КАК ЗаказПокупателяДополнительныеРеквизиты
	|ГДЕ
	|	ЗаказПокупателяДополнительныеРеквизиты.Ссылка = &Ссылка
	|	И ЗаказПокупателяДополнительныеРеквизиты.Свойство.Наименование = &Наименование";

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Примечание = Выборка.Значение;
	КонецЦикла;

	Возврат Примечание;
КонецФункции

#КонецОбласти

&НаСервере
Процедура СоздатьЗаказНаСервере()
		// Вставить содержимое обработчика.
КонецПроцедуры
&НаКлиенте
Процедура СоздатьЗаказ(Команда)
	СоздатьЗаказНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДанныхМатериалПриИзменении(Элемент)
	ТекДанные=Элементы.ДеревоДанных.ТекущиеДанные;
	ТекДанные.ЕдИзм=ПолучитьЕдИзм(ТекДанные.Материал);
	Цена=ПолучитьПоследнююЦенуЗакупки(ТекДанные.Материал);
	Если Цена = 0 Или Цена = Неопределено Тогда
//			Предупреждение("Цена не определена");
		ТекДанные.ЦенаЗакупки=0;
	Иначе
		ТекДанные.ЦенаЗакупки=Цена;
		ТекДанные.ЦенаПродажи=Цена * 1.5;
	КонецЕсли;
	ТекДанные.СтоимостьМатериала=ТекДанные.КоличествоНаКомплект * ТекДанные.ВесДетали * ТекДанные.ЦенаПродажи * 1.2;

КонецПроцедуры
&НаСервере
Функция ПолучитьЕдИзм(Номенклатура)
	Попытка
		Возврат Номенклатура.ЕдиницаИзмерения;
	Исключение
	КонецПопытки;

КонецФункции
&НаСервере
Функция ПолучитьДополнительныеОперации(Операция)
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ
				  |	ФормулыРасчетаОпераций.ДополнительнаяОперация КАК ДополнительнаяОперация,
				  |	ФормулыРасчетаОпераций.Формула КАК Формула,
				  |	ФормулыРасчетаОпераций.А КАК А,
				  |	ФормулыРасчетаОпераций.А1 КАК А1,
				  |	ФормулыРасчетаОпераций.А2 КАК А2,
				  |	ФормулыРасчетаОпераций.А3 КАК А3,
				  |	ФормулыРасчетаОпераций.А4 КАК А4,
				  |	ФормулыРасчетаОпераций.ЦенаА КАК ЦенаА,
				  |	ФормулыРасчетаОпераций.ЦенаА1 КАК ЦенаА1,
				  |	ФормулыРасчетаОпераций.ЦенаА2 КАК ЦенаА2,
				  |	ФормулыРасчетаОпераций.ЦенаА3 КАК ЦенаА3,
				  |	ФормулыРасчетаОпераций.ЦенаА4 КАК ЦенаА4
				  |ИЗ
				  |	РегистрСведений.ФормулыРасчетаОпераций КАК ФормулыРасчетаОпераций
				  |ГДЕ
				  |	ФормулыРасчетаОпераций.Операция = &Операция";
	Запрос.Параметры.Вставить("Операция", Операция);
	Выборка=Запрос.Выполнить().Выбрать();
	Массив=Новый Массив;
	Пока Выборка.Следующий() Цикл
		СтрДопОперации= Новый Структура;
		СтрДопОперации.Вставить("А", Выборка.А);
		СтрДопОперации.Вставить("А1", Выборка.А1);
		СтрДопОперации.Вставить("А2", Выборка.А2);
		СтрДопОперации.Вставить("А3", Выборка.А3);
		СтрДопОперации.Вставить("А4", Выборка.А4);
		СтрДопОперации.Вставить("ЦенаА", Выборка.ЦенаА);
		СтрДопОперации.Вставить("ЦенаА1", Выборка.ЦенаА1);
		СтрДопОперации.Вставить("ЦенаА2", Выборка.ЦенаА2);
		СтрДопОперации.Вставить("ЦенаА3", Выборка.ЦенаА3);
		СтрДопОперации.Вставить("ЦенаА4", Выборка.ЦенаА4);
		СтрДопОперации.Вставить("Формула", Выборка.Формула);
		СтрДопОперации.Вставить("ДополнительнаяОперация", Выборка.ДополнительнаяОперация);
		Массив.Добавить(СтрДопОперации);
	КонецЦикла;
	Возврат Массив;
КонецФункции
&НаСервере
Функция ПолучитьЦеныОпераций(Операция, Материал)
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ
				  |	ПланП_ЦенаДопОперацийСрезПоследних.Операция КАК Операция,
				  |	ПланП_ЦенаДопОперацийСрезПоследних.ВспомогательнаяОперация КАК ВспомогательнаяОперация,
				  |	ПланП_ЦенаДопОперацийСрезПоследних.Материал КАК Материал,
				  |	ПланП_ЦенаДопОперацийСрезПоследних.ЕдИзм КАК ЕдИзм,
				  |	ПланП_ЦенаДопОперацийСрезПоследних.ЦенаОсновнойОперации КАК ЦенаОсновнойОперации,
				  |	ПланП_ЦенаДопОперацийСрезПоследних.ЦенаА КАК ЦенаА,
				  |	ПланП_ЦенаДопОперацийСрезПоследних.ЦенаА1 КАК ЦенаА1,
				  |	ПланП_ЦенаДопОперацийСрезПоследних.ЦенаА2 КАК ЦенаА2,
				  |	ПланП_ЦенаДопОперацийСрезПоследних.ЦенаА3 КАК ЦенаА3,
				  |	ПланП_ЦенаДопОперацийСрезПоследних.ЦенаА4 КАК ЦенаА4,
				  |	ПланП_ЦенаДопОперацийСрезПоследних.ЦенаЗависитОтМатериала КАК ЦенаЗависитОтМатериала
				  |ИЗ
				  |	РегистрСведений.ПланП_ЦенаДопОпераций.СрезПоследних(, ) КАК ПланП_ЦенаДопОперацийСрезПоследних
				  |ГДЕ
				  |	ПланП_ЦенаДопОперацийСрезПоследних.Операция = &Операция
				  |	И ПланП_ЦенаДопОперацийСрезПоследних.Материал = &Материал";
	Запрос.Параметры.Вставить("Операция", Операция);

	Запрос.Параметры.Вставить("Материал", Материал);
	Запрос.Параметры.Вставить("ПустаяССылкаМатериал", Справочники.Номенклатура.ПустаяСсылка());

	Выборка=Запрос.Выполнить().Выбрать();
	Массив=Новый Массив;
	Пока Выборка.Следующий() Цикл
		СтрДопОперации= Новый Структура;
		СтрДопОперации.Вставить("ЦенаА", Выборка.ЦенаА);
		СтрДопОперации.Вставить("ЦенаА1", Выборка.ЦенаА1);
		СтрДопОперации.Вставить("ЦенаА2", Выборка.ЦенаА2);
		СтрДопОперации.Вставить("ЦенаА3", Выборка.ЦенаА3);
		СтрДопОперации.Вставить("ЦенаА4", Выборка.ЦенаА4);
		СтрДопОперации.Вставить("ЦенаОсновнойОперации", Выборка.ЦенаОсновнойОперации);
		Массив.Добавить(СтрДопОперации);
	КонецЦикла;
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура ОперацииВЭтапахОперацияПриИзменении(Элемент)
	ТекДанные=Элементы.ОперацииВЭтапах.ТекущиеДанные;
	ТекДанные.ЕдИзм=ПолучитьЕдИзм(ТекДанные.Операция);

	Структура=Новый Структура;
	Структура.Вставить("GUID", ТекДанные.КлючСтроки);
	НайдСтрока=Объект.СоставИзделия.НайтиСтроки(Структура);
	Материал=НайдСтрока[0].Материал;
	//	
//			ТекДанные=Элементы.ОперацииВЭтапах.ТекущиеДанные;
//			Если СтрНайти(Строка(ТекДанные.Операция),"Лазер",,,)>0 тогда
//Элементы.ОперацииВЭтапахПараметрА.Доступность=Истина;
//Иначе
//Элементы.ОперацииВЭтапахПараметрА.Доступность=Ложь;

//КонецЕсли;
	МассивЦен=ПолучитьЦеныОпераций(ТекДанные.Операция, Материал);
	ТекДанные.КоэффициентСложности=1.5;
	МассивДопОпер=ПолучитьДополнительныеОперации(ТекДанные.Операция);
	Попытка
		ТекДанные.ЦенаПродажи=МассивЦен[0].ЦенаОсновнойОперации;
		ТекДанные.ФормулаРасчета = МассивДопОпер[0].Формула;

	Исключение
	КонецПопытки;
	Попытка
		НовСтрока=Объект.ДополнительныеОперации.Добавить();
		НовСтрока.Наименование= МассивДопОпер[0].ДополнительнаяОперация;
		НовСтрока.КлючСтроки=ТекДанные.GUID;
		НовСтрока.ЦенаА=МассивЦен[0].ЦенаА;
		НовСтрока.ЦенаА1=МассивЦен[0].ЦенаА;
		НовСтрока.ЦенаА2=МассивЦен[0].ЦенаА2;
		НовСтрока.ЦенаА3=МассивЦен[0].ЦенаА3;
		НовСтрока.ЦенаА4=МассивЦен[0].ЦенаА4;
		ИзменениеНаименованийКолонокДО(МассивДопОпер);
	Исключение
	КонецПопытки;



//Для к=0 по МассивДопОпер.Количество() цикл
//	
//КонецЦикла;
КонецПроцедуры
&НаКлиенте
Процедура ИзменениеНаименованийКолонокДО(МассивДопОпер)
	Если Не ПустаяСтрока(МассивДопОпер[0].А) Тогда
		ЭтаФорма.Элементы.ДополнительныеОперацииА.Заголовок=МассивДопОпер[0].А;
		ЭтаФорма.Элементы.ДополнительныеОперацииА.Видимость=Истина;
	Иначе
		ЭтаФорма.Элементы.ДополнительныеОперацииА.Видимость=Ложь;
		ЭтаФорма.Элементы.ДополнительныеОперацииА.Заголовок="";

	КонецЕсли;
	Если Не ПустаяСтрока(МассивДопОпер[0].ЦенаА) Тогда
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА.Заголовок=МассивДопОпер[0].ЦенаА;
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА.Видимость=Истина;
	Иначе
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА.Видимость=Ложь;
	КонецЕсли;
//1
	Если Не ПустаяСтрока(МассивДопОпер[0].А1) Тогда
		ЭтаФорма.Элементы.ДополнительныеОперацииА1.Заголовок=МассивДопОпер[0].А1;
		ЭтаФорма.Элементы.ДополнительныеОперацииА1.Видимость=Истина;
	Иначе
		ЭтаФорма.Элементы.ДополнительныеОперацииА1.Видимость=Ложь;
	КонецЕсли;
	Если Не ПустаяСтрока(МассивДопОпер[0].ЦенаА1) Тогда
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА1.Заголовок=МассивДопОпер[0].ЦенаА1;
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА1.Видимость=Истина;
	Иначе
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА1.Видимость=Ложь;
	КонецЕсли;
//2
	Если Не ПустаяСтрока(МассивДопОпер[0].А2) Тогда
		ЭтаФорма.Элементы.ДополнительныеОперацииА2.Заголовок=МассивДопОпер[0].А2;
		ЭтаФорма.Элементы.ДополнительныеОперацииА2.Видимость=Истина;
	Иначе
		ЭтаФорма.Элементы.ДополнительныеОперацииА2.Видимость=Ложь;
	КонецЕсли;
	Если Не ПустаяСтрока(МассивДопОпер[0].ЦенаА2) Тогда
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА2.Заголовок=МассивДопОпер[0].ЦенаА2;
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА2.Видимость=Истина;
	Иначе
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА2.Видимость=Ложь;
	КонецЕсли;
//3
	Если Не ПустаяСтрока(МассивДопОпер[0].А3) Тогда
		ЭтаФорма.Элементы.ДополнительныеОперацииА3.Заголовок=МассивДопОпер[0].А3;
		ЭтаФорма.Элементы.ДополнительныеОперацииА3.Видимость=Истина;
	Иначе
		ЭтаФорма.Элементы.ДополнительныеОперацииА3.Видимость=Ложь;
	КонецЕсли;
	Если Не ПустаяСтрока(МассивДопОпер[0].ЦенаА3) Тогда
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА3.Заголовок=МассивДопОпер[0].ЦенаА3;
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА3.Видимость=Истина;
	Иначе
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА3.Видимость=Ложь;
	КонецЕсли;
//4
	Если Не ПустаяСтрока(МассивДопОпер[0].А4) Тогда
		ЭтаФорма.Элементы.ДополнительныеОперацииА4.Заголовок=МассивДопОпер[0].А4;
		ЭтаФорма.Элементы.ДополнительныеОперацииА4.Видимость=Истина;
	Иначе
		ЭтаФорма.Элементы.ДополнительныеОперацииА4.Видимость=Ложь;
	КонецЕсли;
	Если Не ПустаяСтрока(МассивДопОпер[0].ЦенаА4) Тогда
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА4.Заголовок=МассивДопОпер[0].ЦенаА4;
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА4.Видимость=Истина;
	Иначе
		ЭтаФорма.Элементы.ДополнительныеОперацииЦенаА4.Видимость=Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоДанныхШиринаПриИзменении(Элемент)
	ТекДанные=Элементы.ДеревоДанных.ТекущиеДанные;
	ТекДанные.ВесДетали=ПолучитьПлотность(ТекДанные.Материал) * ТекДанные.Длина * ТекДанные.Ширина;
	ТекДанные.СтоимостьМатериала=ТекДанные.КоличествоНаКомплект * ТекДанные.ВесДетали * ТекДанные.ЦенаПродажи * 1.2;

КонецПроцедуры
&НаКлиенте
Процедура ДеревоДанныхДлинаПриИзменении(Элемент)
	ТекДанные=Элементы.ДеревоДанных.ТекущиеДанные;
	ТекДанные.ВесДетали=1.2 * ПолучитьПлотность(ТекДанные.Материал) * ТекДанные.Длина * ТекДанные.Ширина;
	ТекДанные.СтоимостьМатериала=ТекДанные.КоличествоНаКомплект * ТекДанные.ВесДетали * ТекДанные.ЦенаПродажи * 1.2;

КонецПроцедуры

&НаСервере
Функция ПолучитьПлотность(Номенклатура)
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ
				  |	ПланП_ДанныеДляРасчетаВесаМатериала.Номенклатура КАК Номенклатура,
				  |	ПланП_ДанныеДляРасчетаВесаМатериала.Толщина КАК Толщина,
				  |	ПланП_ДанныеДляРасчетаВесаМатериала.ПлотностьМатериала КАК ПлотностьМатериала
				  |ИЗ
				  |	РегистрСведений.ПланП_ДанныеДляРасчетаВесаМатериала КАК ПланП_ДанныеДляРасчетаВесаМатериала
				  |ГДЕ
				  |	ПланП_ДанныеДляРасчетаВесаМатериала.Номенклатура = &Номенклатура";
	Запрос.Параметры.Вставить("Номенклатура", Номенклатура);

	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Толщина * Выборка.ПлотностьМатериала / 1000000000;

	КонецЦикла;
КонецФункции
&НаСервере
Функция ПолучитьПоследнююЦенуЗакупки(Номенклатура)
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ
				  |	ЦеныНоменклатурыКонтрагентовСрезПоследних.Номенклатура КАК Номенклатура,
				  |	ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена КАК Цена
				  |ИЗ
				  |	РегистрСведений.ЦеныНоменклатурыКонтрагентов.СрезПоследних(&Дата, ) КАК ЦеныНоменклатурыКонтрагентовСрезПоследних
				  |ГДЕ
				  |	ЦеныНоменклатурыКонтрагентовСрезПоследних.Номенклатура = &Номенклатура";
	Запрос.Параметры.Вставить("Дата", ТекущаяДата());
	Запрос.Параметры.Вставить("Номенклатура", Номенклатура);
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Цена=Выборка.Цена;

	КонецЦикла;
	Возврат Цена;
КонецФункции

&НаКлиенте
Процедура НоменклатураВОперацияхНоменклатураПриИзменении(Элемент)
	ТекДанные=Элементы.НоменклатураВОперациях.ТекущиеДанные;
	ТекДанные.ЕдИзм=ПолучитьЕдИзм(ТекДанные.Номенклатура);
	Цена=ПолучитьПоследнююЦенуЗакупки(ТекДанные.Номенклатура);
	Если Цена = 0 Или Цена = Неопределено Тогда
//			Предупреждение("Цена не определена");
		ТекДанные.ЦенаЗакупки=0;
	Иначе
		ТекДанные.ЦенаЗакупки=Цена;
		ТекДанные.ЦенаПродажи=Цена * 1.5;
	КонецЕсли;

КонецПроцедуры
&НаСервере
Функция ПолучитьЦенуПродажи(Номенклатура)
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ
				  |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
				  |ИЗ
				  |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, ) КАК ЦеныНоменклатурыСрезПоследних
				  |ГДЕ
				  |	ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
				  |	И ЦеныНоменклатурыСрезПоследних.Актуальность = ИСТИНА
				  |	И ЦеныНоменклатурыСрезПоследних.ВидЦен = &ВидЦен";
	Запрос.Параметры.Вставить("Дата", ТекущаяДата());
	Запрос.Параметры.Вставить("Номенклатура", Номенклатура);
	Запрос.Параметры.Вставить("ВидЦен", Справочники.ВидыЦен.Оптовая);

	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Цена=Выборка.Цена;
	КонецЦикла;
	Возврат Цена;
КонецФункции

&НаКлиенте
Процедура ДеревоДанныхЦенаЗакупкиПриИзменении(Элемент)
	ТекДанные=Элементы.ДеревоДанных.ТекущиеДанные;
	ТекДанные.ЦенаПродажи=ТекДанные.ЦенаЗакупки * 1.5;
	ТекДанные.СтоимостьМатериала=ТекДанные.КоличествоНаКомплект * ТекДанные.ВесДетали * ТекДанные.ЦенаПродажи * 1.2;
	ТекДанные.ПримечаниеИсточникИнформации="Источник информации по закупочной цене?";
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураВОперацияхЦенаЗакупкиПриИзменении(Элемент)
	ТекДанные=Элементы.НоменклатураВОперациях.ТекущиеДанные;
	ТекДанные.ЦенаПродажи=ТекДанные.ЦенаЗакупки * 1.5;
	ТекДанные.Сумма=ТекДанные.Количество * ТекДанные.ЦенаПродажи;
	ТекДанные.ПримечаниеИсточникИнформации="Источник информации по закупочной цене?";
КонецПроцедуры

&НаСервере
Функция ПолучитьЦенуРеза(Номенклатура)
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ
				  |	ПланП_СтоимостьЛазернойРезкиСрезПоследних.Материал КАК Материал,
				  |	ПланП_СтоимостьЛазернойРезкиСрезПоследних.ЕдИзм КАК ЕдИзм,
				  |	ПланП_СтоимостьЛазернойРезкиСрезПоследних.ЦенаОсновнойОперации КАК ЦенаОсновнойОперации,
				  |	ПланП_СтоимостьЛазернойРезкиСрезПоследних.ЦенаА КАК ЦенаА
				  |ИЗ
				  |	РегистрСведений.ПланП_ЦенаДопОпераций.СрезПоследних(&Дата, ) КАК ПланП_СтоимостьЛазернойРезкиСрезПоследних
				  |ГДЕ
				  |	ПланП_СтоимостьЛазернойРезкиСрезПоследних.Материал = &Номенклатура";
	Запрос.Параметры.Вставить("Дата", ТекущаяДата());
	Запрос.Параметры.Вставить("Номенклатура", Номенклатура);

	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЦенаРеза=Выборка.ЦенаРеза;
	КонецЦикла;
	Возврат ЦенаРеза;
КонецФункции
&НаСервере
Функция ПолучитьЦенуВрезки(Номенклатура)
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ
				  |	ПланП_СтоимостьЛазернойРезкиСрезПоследних.Материал КАК Материал,
				  |	ПланП_СтоимостьЛазернойРезкиСрезПоследних.ЕдИзм КАК ЕдИзм,
				  |	ПланП_СтоимостьЛазернойРезкиСрезПоследних.ЦенаОсновнойОперации КАК ЦенаОсновнойОперации,
				  |	ПланП_СтоимостьЛазернойРезкиСрезПоследних.ЦенаА КАК ЦенаА
				  |ИЗ
				  |	РегистрСведений.ПланП_ЦенаДопОпераций.СрезПоследних(&Дата, ) КАК ПланП_СтоимостьЛазернойРезкиСрезПоследних
				  |ГДЕ
				  |	ПланП_СтоимостьЛазернойРезкиСрезПоследних.Материал = &Номенклатура";
	Запрос.Параметры.Вставить("Дата", ТекущаяДата());
	Запрос.Параметры.Вставить("Номенклатура", Номенклатура);

	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЦенаВрезки=Выборка.ЦенаВрезки;
	КонецЦикла;
	Возврат ЦенаВрезки;
КонецФункции


//&НаКлиенте
//	Процедура ОперацииВЭтапахКоличествоВрезокПриИзменении(Элемент)
//		ТекДанные=Элементы.ОперацииВЭтапах.ТекущиеДанные;
////		ТекДанные.ЕдИзм=ПолучитьЕдИзм(ТекДанные.Операция);
//		Если СтрНайти(Строка(ТекДанные.Операция),"Лазер",,,)>0 тогда
//			Структура=Новый Структура;
//			Структура.Вставить("GUID",ТекДанные.КлючСтроки);
//			НайдСтрока=Объект.СоставИзделия.НайтиСтроки(Структура);
//			ЦенаПараметра=ПолучитьЦенуВрезки(НайдСтрока[0].Материал);
//			ЦенаРеза=ПолучитьЦенуРеза(НайдСтрока[0].Материал);
//			
//			ТекДанные.Сумма=ТекДанные.Количество*ЦенаРеза+ТекДанные.ПараметрA*ЦенаПараметра;
//			ТекДанные.ЦенаПродажи=ТекДанные.Сумма/ТекДанные.Количество;
//			
//		Иначе	
//	    ЦенаВрезки=0;
//	КонецЕсли;
//	
//КонецПроцедуры
&НаКлиенте
Процедура ОперацииВЭтапахКоличествоПриИзменении(Элемент)
	//РасчетПоФормуле();
	ТекДанные=Элементы.ОперацииВЭтапах.ТекущиеДанные;
		//ТекДанные.Сумма=ТекДанные.Количество*ТекДанные.ЦенаПродажи;
	КлючСтроки=ТекДанные.GUID;
	РасчетПоФормуле(КлючСтроки);

КонецПроцедуры
&НаКлиенте
Процедура РасчетПоФормуле(КлючСтроки)
	Структура=Новый Структура;
	Структура.Вставить("GUID", КлючСтроки);
	НайдСтрокаОперации=Объект.ОперацииВЭтапах.НайтиСтроки(Структура);
	Формула=НайдСтрокаОперации[0].ФормулаРасчета;
	Количество=НайдСтрокаОперации[0].Количество;
	ЦенаПродажи=НайдСтрокаОперации[0].ЦенаПродажи;

	Структура=Новый Структура;
	Структура.Вставить("КлючСтроки", КлючСтроки);
	НайдСтрокаДопОперации=Объект.ДополнительныеОперации.НайтиСтроки(Структура);
	А=НайдСтрокаДопОперации[0].А;
	А1=НайдСтрокаДопОперации[0].А1;
	А2=НайдСтрокаДопОперации[0].А2;
	А3=НайдСтрокаДопОперации[0].А3;
	А4=НайдСтрокаДопОперации[0].А4;
	ЦенаА=НайдСтрокаДопОперации[0].ЦенаА;
	ЦенаА1=НайдСтрокаДопОперации[0].ЦенаА1;
	ЦенаА2=НайдСтрокаДопОперации[0].ЦенаА2;
	ЦенаА3=НайдСтрокаДопОперации[0].ЦенаА3;
	ЦенаА4=НайдСтрокаДопОперации[0].ЦенаА4;

	Сумма=Вычислить(Формула);
	Для Каждого ТекСтрока Из Объект.ОперацииВЭтапах Цикл
		Если ТекСтрока.GUID = КлючСтроки Тогда

			ТекСтрока.Сумма=Сумма;
		Иначе
			Продолжить;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры
&НаКлиенте
Процедура ДополнительныеОперацииАПриИзменении(Элемент)
//РасчетПоФормуле();
	ТекДанные=Элементы.ДополнительныеОперации.ТекущиеДанные;
	КлючСтроки=ТекДанные.КлючСтроки;
	РасчетПоФормуле(КлючСтроки);

КонецПроцедуры

&НаСервере
Функция СоздатьНоменклатуру(РасчетнаяНменклатура, Категория, ЕдИзм, Док)
	НайдКонечноеИзделие=Справочники.Номенклатура.НайтиПоНаименованию(РасчетнаяНменклатура, Истина, , );
	Если НайдКонечноеИзделие = Справочники.Номенклатура.ПустаяСсылка() Тогда
		НовКонечноеИзделие=Справочники.Номенклатура.СоздатьЭлемент();
		НовКонечноеИзделие.Наименование=РасчетнаяНменклатура;
//	НовКонечноеИзделие.Владелец=Справочники.Номенклатура.НайтиПоНаименованию(Категория).Ссылка;
		НовКонечноеИзделие.ЕдиницаИзмерения=ЕдИзм;
		НовКонечноеИзделие.ИспользоватьХарактеристики=Истина;
		НовКонечноеИзделие.КатегорияНоменклатуры=Справочники.КатегорииНоменклатуры.НайтиПоНаименованию(Категория).Ссылка;
		НовКонечноеИзделие.НаименованиеПолное=РасчетнаяНменклатура;
		НовКонечноеИзделие.Комментарий="Создан из " + Док;
		НовКонечноеИзделие.ТипНоменклатуры=Перечисления.ТипыНоменклатуры.Запас;
		НовКонечноеИзделие.Записать();
	Иначе
		КонечноеИзделие=НайдКонечноеИзделие;
	КонецЕсли;
	Возврат КонечноеИзделие.Ссылка;
КонецФункции
&НаСервере
Процедура СтатусДокументаПриИзмененииНаСервере()
	Если Объект.СтатусДокумента = Перечисления.ПланП_СтатусРасчета.СогласованСКлиентом Тогда
	//Создание номенклатуры
	//Конечное изделие
		Объект.КонечноеИзделие=СоздатьНоменклатуру(Объект.КонечноеИзделие, "Готовая продукция", Объект.ЕдИзм,
			Объект.Ссылка);
		Для Каждого ТекСтрока Из Объект.СоставИзделия Цикл
			ТекСтрока.Наименование=СоздатьНоменклатуру(ТекСтрока.Наименование, "Готовая продукция", ТекСтрока.ЕдИзм,
				Объект.Ссылка);
		КонецЦикла;
		Дерево = ВыгрузитьТаблицуЗначенийВДеревоЗначений(Объект.СоставИзделия.Выгрузить());

		ЗначениеВРеквизитФормы(Дерево, "ДеревоДанных");

		Для Каждого ТекСтрока Из Объект.НоменклатураВОперациях Цикл
			ТекСтрока.Номенклатура=СоздатьНоменклатуру(ТекСтрока.Номенклатура, "Готовая продукция", ТекСтрока.ЕдИзм,
				Объект.Ссылка);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура СтатусДокументаПриИзменении(Элемент)
//Режим = РежимДиалогаВопрос.ДаНет;
//Ответ = Вопрос(НСтр("ru = 'Продолжить выполнение операции?';"
//     + " en = 'Do you want to continue?'"), Режим, 0);
//Если Ответ = КодВозвратаДиалога.Нет Тогда
//    Возврат;
//КонецЕсли;

	СтатусДокументаПриИзмененииНаСервере();
КонецПроцедуры